Server Program (Server1.java) – 
import java.io.DataInputStream; 
import java.io.DataOutputStream; 
import java.io.FileOutputStream; 
import java.io.File; 
import java.net.ServerSocket; 
import java.net.Socket; 
import java.util.Scanner;

public class Server1
{
	private static DataOutputStream dataOutputStream = null; 
	private static DataInputStream dataInputStream = null;
	public static void main(String[] args) 
	{
		try(ServerSocket serverSocket = new ServerSocket(5000))
		{
			System.out.println("listening to port:5000"); 
			Socket clientSocket = serverSocket.accept();
			System.out.println(clientSocket+" connected.");
			dataInputStream = new DataInputStream(clientSocket.getInputStream()); 
			dataOutputStream = new DataOutputStream(clientSocket.getOutputStream()); 
			String filename = dataInputStream.readUTF(); 
			System.out.println("File name is "+filename);
			File f=new File(filename);
			Scanner sc = new Scanner(f); 
			String msg=""; 
			while (sc.hasNextLine()) 
			{ 
				msg+=sc.nextLine();
				msg+="\n";
			}
			dataOutputStream.writeUTF(msg);
			dataInputStream.close();
			dataOutputStream.close();
			clientSocket.close();
		} catch (Exception e) {e.printStackTrace();}
	}
}


Client Program (Client1.java) – 
import java.io.*;
import java.net.Socket; 
import java.util.Scanner;

public class Client1 
{
	private static DataOutputStream dataOutputStream = null; 
	private static DataInputStream dataInputStream = null;

	public static void main(String[] args) 
	{
		try(Socket socket = new Socket("localhost",5000)) 
		{ 
			dataInputStream = new DataInputStream(socket.getInputStream());
			dataOutputStream = new DataOutputStream(socket.getOutputStream()); 
			Scanner sc = new Scanner(System.in);
			System.out.println("Enter the absolute path of a file:");
			String filepath = sc.nextLine();	
			System.out.println("File name is"+ filepath); 
			dataOutputStream.writeUTF(filepath);
			String msg=dataInputStream.readUTF();
			System.out.println("Contents of file is: "+msg); 
			dataInputStream.close();
			dataInputStream.close(); 
		} catch(Exception e) { e.printStackTrace();}
	}
}
